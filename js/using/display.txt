async function fetchData() {
    try {
        const response = await fetch('helpers/fred.json');

        if (!response.ok) {
            throw new Error('Failed to fetch data');
        }

        const data = await response.json();
        return data;
        
    } catch (error) {
        console.error('Error:', error);
        return [];
    }
}

document.getElementById('sen').addEventListener('submit', async (event) => {
    event.preventDefault();

    const number = document.getElementById('key').value;
    if (number.trim() !== '') { // Check if the input is not empty
        const data = await fetchData();
        const match = data.find(person => person.Id == number);

        if (match) {
            alert('User found!');
            document.getElementById('key').value = "";

            // Fetch and display user data
            fetchUserData(match.Id)
                .then(user => {
                    if (user) {
                        // Your chart and user information display code goes here
                        const userName = user.Name;
                        const contributions = user.Contributions;

                        const months = contributions.map(contribution => contribution.Month);
                        const amounts = contributions.map(contribution => contribution.Amount);

                        const ctx = document.getElementById('myChart').getContext('2d');

                        const myChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: months,
                                datasets: [{
                                    label: 'Chart',
                                    data: amounts,
                                    backgroundColor: [
                                        'rgba(255, 26, 104, 0.2)',
                                        'rgba(54, 162, 235, 0.2)',
                                        'rgba(255, 206, 86, 0.2)',
                                        'rgba(75, 192, 192, 0.2)',
                                        'rgba(153, 102, 255, 0.2)',
                                        'rgba(255, 159, 64, 0.2)',
                                        'rgba(0, 0, 0, 0.2)'
                                    ],
                                    borderColor: [
                                        'rgba(255, 26, 104, 1)',
                                        'rgba(54, 162, 235, 1)',
                                        'rgba(255, 206, 86, 1)',
                                        'rgba(75, 192, 192, 1)',
                                        'rgba(153, 102, 255, 1)',
                                        'rgba(255, 159, 64, 1)',
                                        'rgba(0, 0, 0, 1)'
                                    ],
                                    borderWidth: 2,
                                    barPercentage: 0.7
                                }]
                            },
                            options: {
                                maintainAspectRatio: false,
                                indexAxis: 'y',
                                scales: {
                                    y: {
                                        beginAtZero: true
                                    }
                                }
                            }
                        });

                        document.getElementById('userName').textContent = userName;
                        document.getElementById('user-name').textContent = userName;
                    } else {
                        alert('User not found');
                    }
                });
        } else {
            // If the userID doesn't match, show an alert
            alert('User not found');
        }
    } else {
        alert('Please enter a number.');
    }
});

async function fetchUserData(userId) {
    try {
        const response = await fetch('helpers/fred.json');
        if (!response.ok) {
            throw new Error('Failed to fetch data');
        }

        const data = await response.json();
        const user = data.find(person => person.Id === userId);
        return user;
    } catch (error) {
        console.error('Error:', error);
        return null;
    }
}
